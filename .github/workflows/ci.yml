name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: ['8.1', '8.2']
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: webapp_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP ${{ matrix.php-version }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, pdo_sqlite
        coverage: none
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'npm'
    
    - name: Install PHP dependencies
      run: composer install --no-progress --no-interaction --prefer-dist --optimize-autoloader
    
    - name: Install Node dependencies
      run: npm ci
    
    - name: Setup environment
      run: |
        cp .env.example .env
        sed -i 's/DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/' .env
        sed -i 's/DB_NAME=webapp/DB_NAME=webapp_test/' .env
        sed -i 's/DB_USER=webapp/DB_USER=root/' .env
        sed -i 's/DB_PASS=secret/DB_PASS=root/' .env
    
    - name: Run migrations
      run: php scripts/migrate.php
      
    - name: Seed super-admin
      run: |
        echo "Super-admin should be created by migration 004_add_superadmin.sql"
    
    - name: PHP Syntax Check
      run: find . -name "*.php" -not -path "./vendor/*" -exec php -l {} \;
    
    - name: Run PHPUnit tests
      run: |
        if [ -f vendor/bin/phpunit ]; then
          vendor/bin/phpunit --configuration tests/phpunit.xml
        else
          echo "PHPUnit not available, skipping"
        fi
    
    - name: Start PHP server
      run: php -S 0.0.0.0:5000 -t public &
    
    - name: Wait for server
      run: sleep 5
      
    - name: Test health endpoint
      run: |
        curl -f http://localhost:5000/health
        curl -f http://localhost:5000/health.php
    
    - name: Run Cypress E2E tests
      run: |
        if [ -f cypress.config.js ]; then
          npx cypress run --headless
        else
          echo "Cypress not configured, skipping"
        fi
    
    - name: Visual regression test
      run: |
        mkdir -p screenshots/baseline screenshots/current
        echo "Visual regression tests would run here with pixelmatch"
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-results-php-${{ matrix.php-version }}
        path: |
          cypress/screenshots
          cypress/videos
          reports/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP 8.2
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
    
    - name: Install production dependencies
      run: composer install --no-dev --prefer-dist --no-progress --no-interaction --optimize-autoloader
    
    - name: Deploy via SFTP
      env:
        SFTP_HOST: ${{ secrets.SFTP_HOST }}
        SFTP_USER: ${{ secrets.SFTP_USER }}
        SFTP_PASS: ${{ secrets.SFTP_PASS }}
        SFTP_PATH: ${{ secrets.SFTP_PATH }}
      run: |
        if [ -f scripts/deploy.sh ]; then
          bash scripts/deploy.sh
        else
          echo "ðŸš€ Deployment script would run here"
        fi
